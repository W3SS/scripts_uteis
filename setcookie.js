function setCookie(cname,cvalue,exdays){var d=new Date;d.setTime(d.getTime()+24*exdays*60*60*1e3);var expires="expires="+d.toUTCString();document.cookie=cname+"="+cvalue+"; "+expires}function getCookie(cname){for(var name=cname+"=",ca=document.cookie.split(";"),i=0;i<ca.length;i++){for(var c=ca[i];" "===c.charAt(0);)c=c.substring(1);if(0===c.indexOf(name))return c.substring(name.length,c.length)}return""}function initialisePush(){return"showNotification"in ServiceWorkerRegistration.prototype?"denied"===Notification.permission?void console.warn("The user has blocked notifications."):"PushManager"in window?void navigator.serviceWorker.ready.then(function(serviceWorkerRegistration){serviceWorkerRegistration.pushManager.getSubscription().then(function(subscription){if(subscription){if(0===subscription.endpoint.indexOf("https://android.googleapis.com/gcm/send")){var endpointParts=subscription.endpoint.split("/"),registrationId=endpointParts[endpointParts.length-1];registrationId&&$.ajax({url:"https://progressivewebchat-signalr.azurewebsites.net/notificationhub/add",type:"GET",data:{value:registrationId,channel:$.channel}})}$.isPushEnabled=!0}})["catch"](function(err){console.warn("Error during getSubscription()",err)})}):void console.warn("Push messaging isn't supported."):void console.warn("Notifications aren't supported.")}!function($){function ViewModel(){var self=this;self.title=ko.observable(),self.messages=ko.observableArray([])}var postbox=new ko.subscribable,uid=getCookie("uid");uid||(uid=Math.ceil(1e5*Math.random()),setCookie("uid",uid,7));var app=$.sammy("#app"),deferreds={chatRoutes:$.Deferred()},vm=new ViewModel;$.extend($,{vm:vm,uid:uid,isPushEnabled:!1,postbox:postbox,app:app,channel:null,deferreds:deferreds}),$.deferreds.chatRoutes.then(function(){app.get("/demo/progressivewebchat/?",function(context){context.$element();context.render("./main.html").then(function(response){context.app.swap(response)})})}),$(function(){FastClick.attach(document.body),ko.applyBindings(vm),app.run()}),"serviceWorker"in navigator&&navigator.serviceWorker.register("./sw.js").then(function(reg){console.log("Successfully registered service worker",reg)})["catch"](function(err){console.warn("Error whilst registering service worker",err)})}(jQuery),function(){function MessageViewModel(){var self=this;self.name="",self.message="",self.sender=ko.pureComputed(function(){return self.name===$.uid.toString()?"send":"recieve"},self)}function MessageService(){var self=this;self.get=function(data){var deferred=$.Deferred(),transaction=request.result.transaction([objectStoreName]),objectStore=transaction.objectStore(objectStoreName),response=objectStore.getAll();return response.onerror=function(event){console.warn("Error reading from IndexedDB"),deferred.resolve(null)},response.onsuccess=function(event){if(response.result&&response.result.length){var result=response.result;$.channel&&(result=_.filter(response.result,function(n){return n.channel===$.channel})),deferred.resolve(result)}deferred.resolve()},deferred},self.add=function(data){var deferred=$.Deferred(),transaction=request.result.transaction([objectStoreName],"readwrite");transaction.oncomplete=function(event){console.log("Added",data),deferred.resolve(!0)},transaction.onerror=function(event){console.warn("Error adding",data),deferred.resolve(!1)};var objectStore=transaction.objectStore(objectStoreName),response=objectStore.add(data);return response.onsuccess=function(event){},deferred}}function MessageAdapter(){var self=this;self.toMessage=function(data){var messageViewModel=new MessageViewModel;return messageViewModel.name=data.name,messageViewModel.message=data.message,messageViewModel},self.toMessages=function(data){return data&&data.length>0?_.map(data,function(item){return self.toMessage(item)}):[]}}function MessageController(messageService,messageAdapter){var self=this;self.get=function(data){return messageService.get(data).then(function(response){return messageAdapter.toMessages(response)})},self.add=function(data){return messageService.add(data).then(function(response){return response})}}var objectStoreName="messages",request=window.indexedDB.open("Chat",2);request.onupgradeneeded=function(event){var db=event.target.result;db.createObjectStore(objectStoreName,{autoIncrement:!0})},function($){function initialiseChat(){if($.connection.hub.url="//progressivewebchat-signalr.azurewebsites.net/signalr",$.connection.chatHub){$.connection.chatHub.client.broadcastMessage=function(name,message){$.vm.messages.push(messageAdapter.toMessage({name:name,message:message})),messageController.add({name:name,message:message,channel:$.channel}),$("html, body").animate({scrollTop:$(document).height()},"fast")};var deferred=$.Deferred();$.connection.hub.start().done(function(){deferred.resolve()})}$(function(){deferred.then(function(){var $button=$(".sendMessage"),$message=$("#message");$button.prop("disabled",!1),$button.on("click",function(event){event.preventDefault(),$message.val().length>0&&($.connection.chatHub.server.send($.uid,$message.val()),$.postbox.notifySubscribers($message.val(),"pushNotification"),$message.val(""))}),$message.on("keydown",function(event){13===event.keyCode&&(event.preventDefault(),$button.click())})})})}var messageService=new MessageService,messageAdapter=new MessageAdapter,messageController=new MessageController(messageService,messageAdapter);$.app.get("/demo/progressivewebchat/:channel/?",function(context){var self=this;context.$element();context.render("./chat.html").then(function(response){context.app.swap(response);var channel=self.params.channel;$.channel=channel,initialiseChat(),ko.applyBindings($.vm,$("#chat")[0]),messageController.get({channel:channel}).then(function(response){$.vm.messages(response),$("html, body").scrollTop($(document).height())}),initialisePush()})}),$.deferreds.chatRoutes.resolve()}(jQuery)}(),function(window,$){$(function(){$("body").on("click",".button",function(event){var $div=$("<div/>"),btnOffset=$(this).offset(),xPos=event.pageX-btnOffset.left,yPos=event.pageY-btnOffset.top;$div.addClass("ripple-effect");var $ripple=$(".ripple-effect");$ripple.css("height",$(this).height()),$ripple.css("width",$(this).height()),$div.css({top:yPos-$ripple.height()/2,left:xPos-$ripple.width()/2,background:$(this).data("ripple-color")}).appendTo($(this)),window.setTimeout(function(){$div.remove()},2e3)})})}(window,jQuery),function(){function subscribe(){navigator.serviceWorker.ready.then(function(serviceWorkerRegistration){serviceWorkerRegistration.pushManager.subscribe({userVisibleOnly:!0}).then(function(subscription){$.isPushEnabled=!0})["catch"](function(e){"denied"===Notification.permission?console.warn("Permission for Notifications was denied"):console.error("Unable to subscribe to push.",e)})})}function unsubscribe(){navigator.serviceWorker.ready.then(function(serviceWorkerRegistration){serviceWorkerRegistration.pushManager.getSubscription().then(function(pushSubscription){pushSubscription&&pushSubscription.unsubscribe().then(function(successful){})["catch"](function(e){console.warn("Unsubscription error: ",e)})})["catch"](function(e){console.error("Error thrown while unsubscribing from push messaging.",e)})})}$(function(){$.isPushEnabled?unsubscribe():subscribe(),$.postbox.subscribe(function(){navigator.serviceWorker.ready.then(function(serviceWorkerRegistration){serviceWorkerRegistration.pushManager.getSubscription().then(function(subscription){var registrationId="";if(0===subscription.endpoint.indexOf("https://android.googleapis.com/gcm/send")){var endpointParts=subscription.endpoint.split("/");registrationId=endpointParts[endpointParts.length-1]}$.ajax({url:"https://progressivewebchat-signalr.azurewebsites.net/notificationhub/send",type:"GET",data:{channel:$.channel,senderId:registrationId}}).then(function(response){console.log("Sent PUSH notifications through server")})})})},$.vm,"pushNotification")})}();
//# sourceMappingURL=script.min.js.map
